// https://docs.qmk.fm/#/feature_combo?id=dictionary-management
// http://combos.gboards.ca/docs/install/
//       name,      result,   ...chord keys
// COMB(AB_ESC,     KC_ESC,   KC_A, KC_B)
// SUBS(ENT_E_SFTE,  "me ",   KC_M, KC_E) // SUBS uses SEND_STRING to output the given string.

COMB(F_D_ESC, KC_ESC, KC_F, KC_D)
COMB(F_S_F13, KC_F13, KC_F, KC_S)
COMB(J_K_BSPC, KC_BSPC, KC_J, KC_K)
COMB(J_L_DEL, KC_DEL, KC_J, KC_L)

// symbols
COMB(SPC_F_LPRN, KC_LPRN, KC_SPC, KC_F)
COMB(ENT_J_RPRN, KC_RPRN, KC_ENT, KC_J)
COMB(SPC_D_LCBR, KC_LCBR, KC_SPC, KC_D)
COMB(ENT_K_RCBR, KC_RCBR, KC_ENT, KC_K)
COMB(SPC_S_LBRC, KC_LBRC, KC_SPC, KC_S)
COMB(ENT_L_RBRC, KC_RBRC, KC_ENT, KC_L)
COMB(SPC_A_LT, KC_LT, KC_SPC, KC_A)
COMB(ENT_SC_GT, KC_GT, KC_ENT, KC_SCLN)
COMB(SPC_Q_EXLM, KC_EXLM, KC_SPC, KC_Q)
COMB(SPC_W_AT, KC_AT, KC_SPC, KC_W)
COMB(SPC_E_HASH, KC_HASH, KC_SPC, KC_E)
COMB(SPC_R_DLR, KC_DLR, KC_SPC, KC_R)
COMB(SPC_T_PERC, KC_PERC, KC_SPC, KC_T)
COMB(ENT_Y_CIRC, KC_CIRC, KC_ENT, KC_Y)
COMB(ENT_U_AMPR, KC_AMPR, KC_ENT, KC_U)
COMB(ENT_I_ASTR, KC_ASTR, KC_ENT, KC_I)
COMB(ENT_O_DQT, KC_DQT, KC_ENT, KC_O)
COMB(ENT_P_UNDS, KC_UNDS, KC_ENT, KC_P)
COMB(ENT_SLSH_QUES,KC_QUES, KC_ENT, KC_SLSH)
COMB(ENT_BSLS_PIPE,KC_PIPE, KC_ENT, KC_BSLS)
COMB(SPC_GRV_TILD, KC_TILD, KC_SPC, KC_GRV)

SUBS(ENT_DOT_ARROW, "=>", KC_ENT, KC_DOT)
SUBS(ENT_EQL_GOEQ, ":=", KC_ENT, KC_EQL)

// combo shift
SUBS(ENT_Q_SFTQ, "Q", KC_ENT ,KC_Q )
SUBS(ENT_W_SFTW, "W", KC_ENT ,KC_W )
SUBS(ENT_E_SFTE, "E", KC_ENT ,KC_E )
SUBS(ENT_R_SFTR, "R", KC_ENT ,KC_R )
SUBS(ENT_T_SFTT, "T", KC_ENT ,KC_T )
SUBS(ENT_A_SFTA, "A", KC_ENT ,KC_A )
SUBS(ENT_S_SFTS, "S", KC_ENT ,KC_S )
SUBS(ENT_D_SFTD, "D", KC_ENT ,KC_D )
SUBS(ENT_F_SFTF, "F", KC_ENT ,KC_F )
SUBS(ENT_G_SFTG, "G", KC_ENT ,KC_G )
SUBS(ENT_Z_SFTZ, "Z", KC_ENT ,KC_Z )
SUBS(ENT_X_SFTX, "X", KC_ENT ,KC_X )
SUBS(ENT_C_SFTC, "C", KC_ENT ,KC_C )
SUBS(ENT_V_SFTV, "V", KC_ENT ,KC_V )
SUBS(ENT_B_SFTB, "B", KC_ENT ,KC_B )
SUBS(SPC_Y_SFTY, "Y", KC_SPC ,KC_Y )
SUBS(SPC_U_SFTU, "U", KC_SPC ,KC_U )
SUBS(SPC_I_SFTI, "I", KC_SPC ,KC_I )
SUBS(SPC_O_SFTO, "O", KC_SPC ,KC_O )
SUBS(SPC_P_SFTP, "P", KC_SPC ,KC_P )
SUBS(SPC_H_SFTH, "H", KC_SPC ,KC_H )
SUBS(SPC_J_SFTJ, "J", KC_SPC ,KC_J )
SUBS(SPC_K_SFTK, "K", KC_SPC ,KC_K )
SUBS(SPC_L_SFTL, "L", KC_SPC ,KC_L )
SUBS(SPC_N_SFTN, "N", KC_SPC ,KC_N )
SUBS(SPC_M_SFTM, "M", KC_SPC ,KC_M )
SUBS(SPC_SCLN_COLN, ":", KC_SPC, KC_SCLN)

// Number combos
COMB(RCTRL_M_1,    KC_1,KC_RCTL ,KC_M)
COMB(RCTRL_COMM_2, KC_2,KC_RCTL ,KC_COMM)
COMB(RCTRL_DOT_3,  KC_3,KC_RCTL ,KC_DOT)
COMB(RCTRL_J_4,    KC_4,KC_RCTL ,KC_J)
COMB(RCTRL_K_5,    KC_5,KC_RCTL ,KC_K)
COMB(RCTRL_L_6,    KC_6,KC_RCTL ,KC_L)
COMB(RCTRL_U_7,    KC_7,KC_RCTL ,KC_U)
COMB(RCTRL_I_8,    KC_8,KC_RCTL ,KC_I)
COMB(RCTRL_O_9,    KC_9,KC_RCTL ,KC_O)
COMB(RCTRL_PLUS_0, KC_0,KC_RCTL ,KC_PLUS)

// shortcuts
SUBS(KWD_USERNAME, "claudiohbsantos", KC_ENT ,KC_SPC, KC_U )
SUBS(KWD_EMAIL, "claudiohbsantos@gmail.com", KC_ENT ,KC_SPC, KC_E )

// common english words
SUBS(KWD_THE, "the ", KC_T ,KC_E, KC_H )
SUBS(KWD_YOU, "you ", KC_Y ,KC_O, KC_U )
SUBS(KWD_THAT, "that ", KC_T ,KC_H, KC_A )
SUBS(KWD_WAS, "was ", KC_W ,KC_A )

// programming keywords
SUBS(KWD_FUNCTION, "function", KC_F ,KC_C, KC_O, KC_N )
SUBS(KWD_RETURN, "return", KC_R ,KC_E, KC_N )
SUBS(KWD_ELSE, "else", KC_E ,KC_L, KC_S )
SUBS(KWD_LENGTH, "length", KC_E ,KC_L, KC_H )
SUBS(KWD_THIS, "this", KC_T ,KC_H, KC_I, KC_S )
SUBS(KWD_ERR, "err", KC_E ,KC_R)
SUBS(KWD_IF, "if", KC_I ,KC_F)


